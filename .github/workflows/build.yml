name: Build and Release Flutter Windows App

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # Ensure the workflow has write permissions for contents

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build Windows app
        run: flutter build windows

      - name: Create ZIP of the built executable
        run: |
          Compress-Archive -Path build/windows/x64/runner/Release/no_sleep_app.exe -DestinationPath build/windows/x64/runner/Release/no_sleep_app.zip
        shell: pwsh

      - name: Verify ZIP file
        run: |
          if (Test-Path build/windows/x64/runner/Release/no_sleep_app.zip) {
            Write-Host "ZIP creation successful: no_sleep_app.zip found"
          } else {
            Write-Error "ZIP creation failed: no_sleep_app.zip not found"
          }
        shell: pwsh

      - name: Create Tag
        if: github.ref == 'refs/heads/main'
        id: tag
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let version = 1;
            let tagExists = true;
            let tagName;
            while (tagExists) {
              tagName = `v${new Date().toISOString().split('T')[0].replace(/-/g, '.')}.${version}`;
              try {
                await github.rest.git.getRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${tagName}`
                });
                console.log(`Tag ${tagName} already exists`);
                version++;
              } catch (error) {
                if (error.status === 404) {
                  tagExists = false;
                  await github.rest.git.createRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: `refs/tags/${tagName}`,
                    sha: context.sha,
                  });
                  console.log(`Created tag ${tagName}`);
                } else {
                  throw error;
                }
              }
            }
            return { tag: tagName };

      - name: Create Release
        if: steps.tag.outputs.tag != ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: Release ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false

      - name: Verify Release Asset Path
        run: |
          if (Test-Path build/windows/x64/runner/Release/no_sleep_app.zip) {
            Write-Host "Release asset path verified: no_sleep_app.zip found"
          } else {
            Write-Error "Release asset path verification failed: no_sleep_app.zip not found"
          }
        shell: pwsh

      - name: Upload Release Asset
        if: steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/windows/x64/runner/Release/no_sleep_app.zip  # Path to the ZIP file
          asset_name: no_sleep_app.zip
          asset_content_type: application/zip
